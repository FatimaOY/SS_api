generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model devices {
  id      Int      @id @default(autoincrement())
  mac     String   @unique(map: "mac") @db.VarChar(100)
  name    String?  @default("Unnamed Device") @db.VarChar(100)
  user_id Int
  alerts  alerts[]
  users   users    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "devices_ibfk_1")

  @@index([user_id], map: "user_id")
}

model users {
  id         Int          @id @default(autoincrement())
  email      String       @unique(map: "email") @db.VarChar(255)
  password   String       @db.VarChar(255)
  fcm_token  String?      @db.VarChar(255)
  caregivers caregivers[]
  devices    devices[]
  events     events[]
  patients   patients[]
}

model alerts {
  id         Int       @id @default(autoincrement())
  message    String    @db.Text
  lat        Decimal?  @db.Decimal(9, 6)
  lng        Decimal?  @db.Decimal(9, 6)
  created_at DateTime? @default(now()) @db.DateTime(0)
  device_id  Int
  devices    devices   @relation(fields: [device_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "alerts_ibfk_1")

  @@index([device_id], map: "device_id")
}

model caregiverpatientlinks {
  link_id      Int        @id @default(autoincrement())
  caregiver_id Int
  patient_id   Int
  caregivers   caregivers @relation(fields: [caregiver_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "caregiverpatientlinks_ibfk_1")
  patients     patients   @relation(fields: [patient_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "caregiverpatientlinks_ibfk_2")

  @@index([caregiver_id], map: "caregiver_id")
  @@index([patient_id], map: "patient_id")
}

model caregivers {
  id                    Int                     @id @default(autoincrement())
  user_id               Int
  caregiverpatientlinks caregiverpatientlinks[]
  users                 users                   @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "caregivers_ibfk_1")

  @@index([user_id], map: "user_id")
}

model events {
  event_id    Int       @id @default(autoincrement())
  user_id     Int
  title       String?   @db.VarChar(255)
  description String?   @db.Text
  start_time  DateTime? @db.DateTime(0)
  end_time    DateTime? @db.DateTime(0)
  type        String?   @db.VarChar(100)
  users       users     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "events_ibfk_1")

  @@index([user_id], map: "user_id")
}

model medicalrecords {
  record_id         Int       @id @default(autoincrement())
  patient_id        Int
  medical_condition String?   @db.VarChar(255)
  notes             String?   @db.Text
  created_at        DateTime? @default(now()) @db.DateTime(0)
  patients          patients  @relation(fields: [patient_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "medicalrecords_ibfk_1")

  @@index([patient_id], map: "patient_id")
}

model patients {
  id                    Int                     @id @default(autoincrement())
  user_id               Int
  caregiverpatientlinks caregiverpatientlinks[]
  medicalrecords        medicalrecords[]
  users                 users                   @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "patients_ibfk_1")

  @@index([user_id], map: "user_id")
}

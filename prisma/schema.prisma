generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model devices {
  id            Int             @id @default(autoincrement())
  mac           String          @unique(map: "mac") @db.VarChar(100)
  name          String?         @default("Unnamed Device") @db.VarChar(100)
  patient_id    Int
  alerts        alerts[]
  gps_locations gps_locations[]
  user_id       Int

  patients      patients        @relation(fields: [patient_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "devices_patient_fk")
   users         users    @relation(fields: [user_id], references: [id]) // <-- Add this line

  @@index([patient_id], map:Â "patient_id")
}

model users {
  id            Int             @id @default(autoincrement())
  email         String          @unique(map: "email") @db.VarChar(255)
  password      String          @db.VarChar(255)
  fcm_token     String?         @db.VarChar(255)
  caregivers    caregivers[]
  events        events[]
  patients      patients[]
  subscriptions subscriptions[]
  first_name         String?              @db.VarChar(100)
  last_name          String?              @db.VarChar(100)
  address            String?              @db.VarChar(255)
  phone              String?              @db.VarChar(50)
  emergency_name     String?              @db.VarChar(100)
  emergency_phone    String?              @db.VarChar(50)
  medical_info       String?              @db.Text
  voiceassistantlogs voiceassistantlogs[]
  role               String?
  date_of_birth      DateTime?   @db.Date
  gender             String?     @db.VarChar(20)
  blood_type         String?     @db.VarChar(10)
  allergies          String?     @db.Text
  chronic_conditions String?     @db.Text
  current_medications String?    @db.Text
  past_surgeries     String?     @db.Text
  primary_physician  String?     @db.VarChar(100)
  physician_contact  String?     @db.VarChar(100)
  preferred_pharmacy String?     @db.VarChar(100)
  insurance_provider String?     @db.VarChar(100)
  insurance_policy   String?     @db.VarChar(100)
  vaccination_records String?    @db.Text
  devices devices[]

}


model alerts {
  id         Int       @id @default(autoincrement())
  message    String    @db.Text
  lat        Decimal?  @db.Decimal(9, 6)
  lng        Decimal?  @db.Decimal(9, 6)
  created_at DateTime? @default(now()) @db.DateTime(0)
  device_id  Int
  patient_id Int?
  handled    Boolean   @default(false)

  devices    devices   @relation(fields: [device_id], references: [id])
 patients   patients? @relation(fields: [patient_id], references: [id])

  @@index([device_id])
  @@index([patient_id])
}


model caregiverpatientlinks {
  link_id      Int        @id @default(autoincrement())
  caregiver_id Int
  patient_id   Int
  caregivers   caregivers @relation(fields: [caregiver_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "caregiverpatientlinks_ibfk_1")
  patients     patients   @relation(fields: [patient_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "caregiverpatientlinks_ibfk_2")

  @@index([caregiver_id], map: "caregiver_id")
  @@index([patient_id], map: "patient_id")
}

model caregivers {
  id                    Int                     @id @default(autoincrement())
  user_id               Int
  caregiverpatientlinks caregiverpatientlinks[]
  users                 users                   @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "caregivers_ibfk_1")

  @@index([user_id], map: "user_id")
}

model events {
  event_id    Int       @id @default(autoincrement())
  user_id     Int
  title       String?   @db.VarChar(255)
  description String?   @db.Text
  start_time  DateTime? @db.DateTime(0)
  end_time    DateTime? @db.DateTime(0)
  type        String?   @db.VarChar(100)
  users       users     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "events_ibfk_1")

  @@index([user_id], map: "user_id")
}

model medicalrecords {
  record_id         Int       @id @default(autoincrement())
  patient_id        Int
  medical_condition String?   @db.VarChar(255)
  notes             String?   @db.Text
  created_at        DateTime? @default(now()) @db.DateTime(0)
  patients          patients  @relation(fields: [patient_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "medicalrecords_ibfk_1")

  @@index([patient_id], map: "patient_id")
}

model patients {
  id                    Int                     @id @default(autoincrement())
  user_id               Int
  caregiverpatientlinks caregiverpatientlinks[]
  medicalrecords        medicalrecords[]
  devices               devices[]
  alerts                alerts[]
  users                 users                   @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "patients_ibfk_1")

  @@index([user_id], map: "user_id")
}

model subscriptions {
  id           Int      @id @default(autoincrement())
  user_id      Int
  plan         String   @db.VarChar(100)
  status       String   @db.VarChar(50)
  renewal_date DateTime
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt
  users        users    @relation(fields: [user_id], references: [id])

  @@index([user_id])
}

model gps_locations {
  id        Int      @id @default(autoincrement())
  device_id Int
  latitude  Decimal  @db.Decimal(9, 6)
  longitude Decimal  @db.Decimal(9, 6)
  accuracy  Float?
  timestamp DateTime @default(now())
  devices   devices  @relation(fields: [device_id], references: [id])

  @@index([device_id])
}

model voiceassistantlogs {
  id        Int      @id @default(autoincrement())
  user_id   Int
  message   String   @db.Text
  response  String?  @db.Text
  timestamp DateTime @default(now())
  users     users    @relation(fields: [user_id], references: [id])

  @@index([user_id])
}